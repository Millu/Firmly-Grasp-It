--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone II" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=16 LPM_SHOWAHEAD="ON" LPM_WIDTH=8 LPM_WIDTH_R=8 LPM_WIDTHU=4 LPM_WIDTHU_R=4 MAXIMIZE_SPEED=7 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=5 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=5 aclr data q rdclk rdempty rdreq wrclk wrfull wrreq CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Cyclone II" LOW_POWER_MODE="AUTO" lpm_hint="MAXIMIZE_SPEED=7," ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 9.1SP2 cbx_a_gray2bin 2010:03:24:20:43:42:SJ cbx_a_graycounter 2010:03:24:20:43:42:SJ cbx_altdpram 2010:03:24:20:43:42:SJ cbx_altsyncram 2010:03:24:20:43:42:SJ cbx_cycloneii 2010:03:24:20:43:43:SJ cbx_dcfifo 2010:03:24:20:43:43:SJ cbx_fifo_common 2010:03:24:20:43:42:SJ cbx_lpm_add_sub 2010:03:24:20:43:43:SJ cbx_lpm_compare 2010:03:24:20:43:43:SJ cbx_lpm_counter 2010:03:24:20:43:43:SJ cbx_lpm_decode 2010:03:24:20:43:43:SJ cbx_lpm_mux 2010:03:24:20:43:43:SJ cbx_mgl 2010:03:24:21:01:05:SJ cbx_scfifo 2010:03:24:20:43:43:SJ cbx_stratix 2010:03:24:20:43:43:SJ cbx_stratixii 2010:03:24:20:43:43:SJ cbx_stratixiii 2010:03:24:20:43:43:SJ cbx_util_mgl 2010:03:24:20:43:43:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_graycounter_c86 (aclr, clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION a_graycounter_3fc (aclr, clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION a_graycounter_2fc (aclr, clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION altsyncram_7hu (address_a[3..0], address_b[3..0], addressstall_b, clock0, clock1, data_a[7..0], wren_a)
RETURNS ( q_b[7..0]);
FUNCTION dffpipe_ngh (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION alt_synch_pipe_fcb (clock, clrn, d[4..0])
RETURNS ( q[4..0]);
FUNCTION alt_synch_pipe_jc8 (clock, clrn, d[4..0])
RETURNS ( q[4..0]);
FUNCTION cmpr_n16 (dataa[2..0], datab[2..0])
RETURNS ( aeb);
FUNCTION cmpr_m16 (dataa[1..0], datab[1..0])
RETURNS ( aeb);
FUNCTION mux_1u7 (data[1..0], sel[0..0])
RETURNS ( result[0..0]);

--synthesis_resources = lut 4 M4K 1 reg 70 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=s102;{-to p0addr} POWER_UP_LEVEL=LOW;{-to rdemp_eq_comp_lsb_aeb} suppress_da_rule_internal=r105;{-to rdemp_eq_comp_lsb_aeb} POWER_UP_LEVEL=HIGH;{-to rdemp_eq_comp_msb_aeb} suppress_da_rule_internal=r105;{-to rdemp_eq_comp_msb_aeb} POWER_UP_LEVEL=HIGH;{-to rdptr_g} suppress_da_rule_internal=r105;{-to rs_dgwp_reg} suppress_da_rule_internal=r105;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe19|dffe20a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_ed9:dffpipe19|dffe20a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe16|dffe17a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_dd9:dffpipe16|dffe17a* """;

SUBDESIGN dcfifo_qtl1
( 
	aclr	:	input;
	data[7..0]	:	input;
	q[7..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g1p : a_graycounter_c86;
	wrptr_g1p : a_graycounter_3fc;
	wrptr_gp : a_graycounter_2fc;
	fifo_ram : altsyncram_7hu;
	delayed_wrptr_g[4..0] : dffe;
	p0addr : dffe
		WITH (
			power_up = "low"
		);
	rdemp_eq_comp_lsb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdemp_eq_comp_msb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdptr_g[4..0] : dffe;
	rs_dgwp_reg[4..0] : dffe;
	wrfull_eq_comp_lsb_mux_reg : dffe;
	wrfull_eq_comp_msb_mux_reg : dffe;
	ws_dgrp_reg[4..0] : dffe;
	rdaclr : dffpipe_ngh;
	rs_dgwp : alt_synch_pipe_fcb;
	ws_dgrp : alt_synch_pipe_jc8;
	rdempty_eq_comp1_lsb : cmpr_n16;
	rdempty_eq_comp1_msb : cmpr_m16;
	rdempty_eq_comp_lsb : cmpr_n16;
	rdempty_eq_comp_msb : cmpr_m16;
	wrfull_eq_comp1_lsb : cmpr_n16;
	wrfull_eq_comp1_msb : cmpr_m16;
	wrfull_eq_comp_lsb : cmpr_n16;
	wrfull_eq_comp_msb : cmpr_m16;
	rdemp_eq_comp_lsb_mux : mux_1u7;
	rdemp_eq_comp_msb_mux : mux_1u7;
	wrfull_eq_comp_lsb_mux : mux_1u7;
	wrfull_eq_comp_msb_mux : mux_1u7;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[3..0]	: WIRE;
	ram_address_b[3..0]	: WIRE;
	rdcnt_addr_ena	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_g1s[4..0]	: WIRE;
	wrptr_gs[4..0]	: WIRE;

BEGIN 
	rdptr_g1p.aclr = (! rdaclr.q[]);
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = rdcnt_addr_ena;
	wrptr_g1p.aclr = aclr;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	wrptr_gp.aclr = aclr;
	wrptr_gp.clock = wrclk;
	wrptr_gp.cnt_en = valid_wrreq;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! rdcnt_addr_ena);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_gp.q[];
	p0addr.clk = rdclk;
	p0addr.clrn = rdaclr.q[];
	p0addr.d = B"1";
	rdemp_eq_comp_lsb_aeb.clk = rdclk;
	rdemp_eq_comp_lsb_aeb.d = rdemp_eq_comp_lsb_mux.result[];
	rdemp_eq_comp_lsb_aeb.prn = (! aclr);
	rdemp_eq_comp_msb_aeb.clk = rdclk;
	rdemp_eq_comp_msb_aeb.d = rdemp_eq_comp_msb_mux.result[];
	rdemp_eq_comp_msb_aeb.prn = (! aclr);
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	rs_dgwp_reg[].clk = rdclk;
	rs_dgwp_reg[].clrn = (! aclr);
	rs_dgwp_reg[].d = rs_dgwp.q[];
	wrfull_eq_comp_lsb_mux_reg.clk = wrclk;
	wrfull_eq_comp_lsb_mux_reg.clrn = (! aclr);
	wrfull_eq_comp_lsb_mux_reg.d = wrfull_eq_comp_lsb_mux.result[];
	wrfull_eq_comp_msb_mux_reg.clk = wrclk;
	wrfull_eq_comp_msb_mux_reg.clrn = (! aclr);
	wrfull_eq_comp_msb_mux_reg.d = wrfull_eq_comp_msb_mux.result[];
	ws_dgrp_reg[].clk = wrclk;
	ws_dgrp_reg[].clrn = (! aclr);
	ws_dgrp_reg[].d = ws_dgrp.q[];
	rdaclr.clock = (! rdclk);
	rdaclr.clrn = (! aclr);
	rdaclr.d[] = B"1";
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	rdempty_eq_comp1_lsb.dataa[2..0] = rs_dgwp.q[2..0];
	rdempty_eq_comp1_lsb.datab[2..0] = rdptr_g1p.q[2..0];
	rdempty_eq_comp1_msb.dataa[1..0] = rs_dgwp.q[4..3];
	rdempty_eq_comp1_msb.datab[1..0] = rdptr_g1p.q[4..3];
	rdempty_eq_comp_lsb.dataa[2..0] = rs_dgwp.q[2..0];
	rdempty_eq_comp_lsb.datab[2..0] = rdptr_g[2..0].q;
	rdempty_eq_comp_msb.dataa[1..0] = rs_dgwp.q[4..3];
	rdempty_eq_comp_msb.datab[1..0] = rdptr_g[4..3].q;
	wrfull_eq_comp1_lsb.dataa[2..0] = ws_dgrp.q[2..0];
	wrfull_eq_comp1_lsb.datab[2..0] = wrptr_g1s[2..0];
	wrfull_eq_comp1_msb.dataa[1..0] = ws_dgrp.q[4..3];
	wrfull_eq_comp1_msb.datab[1..0] = wrptr_g1s[4..3];
	wrfull_eq_comp_lsb.dataa[2..0] = ws_dgrp.q[2..0];
	wrfull_eq_comp_lsb.datab[2..0] = wrptr_gs[2..0];
	wrfull_eq_comp_msb.dataa[1..0] = ws_dgrp.q[4..3];
	wrfull_eq_comp_msb.datab[1..0] = wrptr_gs[4..3];
	rdemp_eq_comp_lsb_mux.data[] = ( rdempty_eq_comp1_lsb.aeb, rdempty_eq_comp_lsb.aeb);
	rdemp_eq_comp_lsb_mux.sel[] = valid_rdreq;
	rdemp_eq_comp_msb_mux.data[] = ( rdempty_eq_comp1_msb.aeb, rdempty_eq_comp_msb.aeb);
	rdemp_eq_comp_msb_mux.sel[] = valid_rdreq;
	wrfull_eq_comp_lsb_mux.data[] = ( wrfull_eq_comp1_lsb.aeb, wrfull_eq_comp_lsb.aeb);
	wrfull_eq_comp_lsb_mux.sel[] = valid_wrreq;
	wrfull_eq_comp_msb_mux.data[] = ( wrfull_eq_comp1_msb.aeb, wrfull_eq_comp_msb.aeb);
	wrfull_eq_comp_msb_mux.sel[] = valid_wrreq;
	int_rdempty = (rdemp_eq_comp_lsb_aeb.q & rdemp_eq_comp_msb_aeb.q);
	int_wrfull = (wrfull_eq_comp_lsb_mux_reg.q & wrfull_eq_comp_msb_mux_reg.q);
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_gp.q[4..4] $ wrptr_gp.q[3..3]), wrptr_gp.q[2..0]);
	ram_address_b[] = ( (rdptr_g1p.q[4..4] $ rdptr_g1p.q[3..3]), rdptr_g1p.q[2..0]);
	rdcnt_addr_ena = (valid_rdreq # (! p0addr.q));
	rdempty = int_rdempty;
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrfull = int_wrfull;
	wrptr_g1s[] = ( (! wrptr_g1p.q[4..4]), (! wrptr_g1p.q[3..3]), wrptr_g1p.q[2..0]);
	wrptr_gs[] = ( (! wrptr_gp.q[4..4]), (! wrptr_gp.q[3..3]), wrptr_gp.q[2..0]);
END;
--VALID FILE
